#!/usr/bin/env zsh

OP_AUTH_ITEM_NAME_APTIBLE="${OP_AUTH_ITEM_NAME_APTIBLE:-Aptible}"
OP_AUTH_ITEM_NAME_AWS="${OP_AUTH_ITEM_NAME_AWS:-AWS}"

case "$1" in
	auth)
		local account="$2"
		case "$account" in
			aptible)
				local aptible_email
				aptible_email="$(
					op read "op://Private/${OP_AUTH_ITEM_NAME_APTIBLE}/email"
				)"

				local aptible_password
				aptible_password="$(
					op read "op://Private/${OP_AUTH_ITEM_NAME_APTIBLE}/password"
				)"

				local aptible_otp_token
				aptible_otp_token="$(
					op read "op://Private/${OP_AUTH_ITEM_NAME_APTIBLE}/one-time-password?attribute=otp"
				)"

				command aptible login \
					--email="$aptible_email" \
					--password="$aptible_password" \
					--otp-token="$aptible_otp_token" \
					--lifetime=24
				;;

			aws)
				local profile="${3:-session}"

				local aws_expiration_datestamp
				aws_expiration_datestamp="$(
					aws configure --profile="$profile" get aws_session_expiration 2>/dev/null || true
				)"

                local aws_expiration_timestamp=0
                if [ -n "$aws_expiration_datestamp" ]; then
                    aws_expiration_timestamp="$(date --date="$aws_expiration_datestamp" '+%s')"
                fi

	            local timestamp_now
	            timestamp_now="$(date '+%s')"

                if (( timestamp_now < aws_expiration_timestamp )); then
                    return 0
                fi

				local aws_username
				aws_username="$(op read "op://Private/${OP_AUTH_ITEM_NAME_AWS}/username")"

				local aws_otp_token
				aws_otp_token="$(op read "op://Private/${OP_AUTH_ITEM_NAME_AWS}/one-time password?attribute=otp")"

				IFS=$'\t' read -r aws_access_key_id aws_secret_access_key aws_session_token aws_session_expiration < <(
					command aws sts get-session-token \
						--region=us-east-1 \
						--duration=28800 \
						--serial-number="arn:aws:iam::${OP_AUTH_ITEM_NAME_AWS_ACCOUNT_ID:-209595011230}:mfa/${OP_AUTH_AWS_MFA_NAME:-$aws_username}" \
						--token-code="$aws_otp_token" \
						--query='Credentials.[AccessKeyId, SecretAccessKey, SessionToken, Expiration]' \
						--output=text
				)

				aws configure --profile="$profile" set aws_access_key_id "$aws_access_key_id"
				aws configure --profile="$profile" set aws_secret_access_key "$aws_secret_access_key"
				aws configure --profile="$profile" set aws_session_token "$aws_session_token"
				aws configure --profile="$profile" set aws_session_expiration "$aws_session_expiration"
				;;

			*)
				return 1
				;;
		esac
		;;

	*)
		command op "$@"
		;;
esac
